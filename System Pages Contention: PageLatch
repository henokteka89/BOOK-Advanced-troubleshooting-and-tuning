Contention during system pages modifications in tempdb is a common
source of PAGELATCH waits. There are other cases, however, when you
can see page latches and need to analyze wait resources to understand if
those waits were tempdb-related. You can do this with the code from
Listing 9-12, which captures current PAGELATCH waits using the
sys.dm_os_waiting_tasks view.


-- Listing 9-12. Capturing currently waiting sessions
-- SQL Server 2005-2017
SELECT
wt.session_id
,wt.wait_type
,er.wait_resource
,er.wait_time
FROM
sys.dm_os_waiting_tasks wt WITH (NOLOCK)
JOIN sys.dm_exec_requests er WITH (NOLOCK) ON
wt.session_id = er.session_id
WHERE
wt.wait_type LIKE 'PAGELATCH%'
OPTION (MAXDOP 1, RECOMPILE);
-- SQL Server 2019
SELECT
wt.session_id
,wt.wait_type
,er.wait_resource
,er.wait_time
,pi.database_id
,pi.file_id
,pi.page_id
,pi.object_id
,OBJECT_NAME(pi.object_id,pi.database_id) as [object]
,pi.index_id
,pi.page_type_desc
FROM
sys.dm_os_waiting_tasks wt WITH (NOLOCK)
JOIN sys.dm_exec_requests er WITH (NOLOCK) ON
wt.session_id = er.session_id
CROSS APPLY
sys.fn_PageResCracker(er.page_resource) pc
CROSS APPLYsys.dm_db_page_info(pc.db_id,pc.file_id
,pc.page_id,'DETAILED') pi
WHERE
wt.wait_type LIKE 'PAGELATCH%'
OPTION (MAXDOP 1, RECOMPILE);
